[project]
name = "mvp-acupuntura"
version = "0.1.0"
description = "MVP para facilitar a entrevista inicial"
authors = [{ name = "Will Lima", email = "limawill83@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10"
packages = [{ include = "mvp_acupuntura" }]
dependencies = [
    "black (==25.1.0)",
    "certifi (==2025.6.15)",
    "cffi (==1.17.1)",
    "charset-normalizer (==3.4.2)",
    "click (==8.2.1)",
    "exceptiongroup (==1.3.0)",
    "filelock (==3.18.0)",
    "flake8 (==7.3.0)",
    "fsspec (==2025.5.1)",
    "idna (==3.10)",
    "iniconfig (==2.1.0)",
    "jinja2 (==3.1.6)",
    "llvmlite (==0.44.0)",
    "markupsafe (==3.0.2)",
    "mccabe (==0.7.0)",
    "more-itertools (==10.7.0)",
    "mpmath (==1.3.0)",
    "mypy-extensions (==1.1.0)",
    "networkx (==3.4.2)",
    "numba (==0.61.2)",
    "numpy (==2.2.6)",
    "nvidia-cublas-cu12 (==12.6.4.1)",
    "nvidia-cuda-cupti-cu12 (==12.6.80)",
    "nvidia-cuda-nvrtc-cu12 (==12.6.77)",
    "nvidia-cuda-runtime-cu12 (==12.6.77)",
    "nvidia-cudnn-cu12 (==9.5.1.17)",
    "nvidia-cufft-cu12 (==11.3.0.4)",
    "nvidia-cufile-cu12 (==1.11.1.6)",
    "nvidia-curand-cu12 (==10.3.7.77)",
    "nvidia-cusolver-cu12 (==11.7.1.2)",
    "nvidia-cusparse-cu12 (==12.5.4.2)",
    "nvidia-cusparselt-cu12 (==0.6.3)",
    "nvidia-nccl-cu12 (==2.26.2)",
    "nvidia-nvjitlink-cu12 (==12.6.85)",
    "nvidia-nvtx-cu12 (==12.6.77)",
    "openai-whisper (==20240930)",
    "packaging (==25.0)",
    "pathspec (==0.12.1)",
    "platformdirs (==4.3.8)",
    "pluggy (==1.6.0)",
    "pycodestyle (==2.14.0)",
    "pycparser (==2.22)",
    "pyflakes (==3.4.0)",
    "pygments (==2.19.2)",
    "pytest (==8.4.1)",
    "python-dotenv (==1.1.1)",
    "regex (==2024.11.6)",
    "requests (==2.32.4)",
    "scipy (==1.15.3)",
    "sounddevice (==0.5.2)",
    "sympy (==1.14.0)",
    "tiktoken (==0.9.0)",
    "tomli (==2.2.1)",
    "torch (==2.7.1)",
    "tqdm (==4.67.1)",
    "triton (==3.3.1)",
    "typing-extensions (==4.14.0)",
    "urllib3 (==2.5.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
